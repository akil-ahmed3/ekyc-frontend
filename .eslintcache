[{"/home/tesla/Learning/e-kyc/frontend/src/index.js":"1","/home/tesla/Learning/e-kyc/frontend/src/reportWebVitals.js":"2","/home/tesla/Learning/e-kyc/frontend/src/App.js":"3","/home/tesla/Learning/e-kyc/frontend/src/components/videoCamera.js":"4","/home/tesla/Learning/e-kyc/frontend/src/components/photoCamera.js":"5","/home/tesla/Learning/e-kyc/frontend/src/components/formFirstStep.js":"6","/home/tesla/Learning/e-kyc/frontend/src/components/formSecondStep.js":"7"},{"size":472,"mtime":1607865403881,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607846931961,"results":"10","hashOfConfig":"9"},{"size":2405,"mtime":1608312516984,"results":"11","hashOfConfig":"9"},{"size":2131,"mtime":1608644755544,"results":"12","hashOfConfig":"9"},{"size":963,"mtime":1608313294278,"results":"13","hashOfConfig":"9"},{"size":2394,"mtime":1608644746939,"results":"14","hashOfConfig":"9"},{"size":2356,"mtime":1608902812269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1knl53h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tesla/Learning/e-kyc/frontend/src/index.js",[],["32","33"],"/home/tesla/Learning/e-kyc/frontend/src/reportWebVitals.js",[],"/home/tesla/Learning/e-kyc/frontend/src/App.js",[],"/home/tesla/Learning/e-kyc/frontend/src/components/videoCamera.js",["34"],"import React from 'react'\nimport Webcam from 'react-webcam'\nimport Form from './formFirstStep'\nimport '../App.css'\n\nimport { useRef, useState, useCallback } from 'react'\n\nconst WebcamStreamCapture = () => {\n  const webcamRef = useRef(null)\n  const mediaRecorderRef = useRef(null)\n  const [capturing, setCapturing] = useState(false)\n  const [recordedChunks, setRecordedChunks] = useState([])\n\n  const handleDataAvailable = useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data))\n      }\n    },\n    [setRecordedChunks]\n  )\n\n  const handleStartCaptureClick = useCallback(() => {\n    setCapturing(true)\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: 'video/webm'\n    })\n    // mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable)\n    mediaRecorderRef.current.start()\n  }, [webcamRef, setCapturing, mediaRecorderRef, handleDataAvailable])\n\n  const handleStopCaptureClick = React.useCallback(() => {\n    mediaRecorderRef.current.stop()\n    setCapturing(false)\n    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable)\n  }, [mediaRecorderRef, setCapturing, handleDataAvailable])\n\n  return (\n    <div className=\"container col-12\">\n      <div className=\"mx-lg-auto\">\n        <div className=\"mb-3 col-5\">\n          <div className=\"myDiv mb-3 col-12 d-flex justify-content-end\">\n            <Webcam audio={false} ref={webcamRef} />\n          </div>\n          <div className=\"mb-3 col-12\">\n            {capturing ? (\n              <button\n                className=\"btn btn-primary col-auto\"\n                onClick={handleStopCaptureClick}\n              >\n                Stop Capture\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-primary col-auto\"\n                onClick={handleStartCaptureClick}\n              >\n                Start Capture\n              </button>\n            )}\n          </div>\n        </div>\n        <Form recordedChunks={recordedChunks} />\n      </div>\n    </div>\n  )\n}\n\nexport default WebcamStreamCapture\n","/home/tesla/Learning/e-kyc/frontend/src/components/photoCamera.js",[],"/home/tesla/Learning/e-kyc/frontend/src/components/formFirstStep.js",[],"/home/tesla/Learning/e-kyc/frontend/src/components/formSecondStep.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":30,"column":6,"nodeType":"43","endLine":30,"endColumn":70,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":6,"column":19,"nodeType":"47","messageId":"48","endLine":6,"endColumn":29},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'handleDataAvailable'. Either exclude it or remove the dependency array.","ArrayExpression",["52"],"no-unused-vars","'picture' is assigned a value but never used.","Identifier","unusedVar","'setPicture' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [webcamRef, setCapturing, mediaRecorderRef]",{"range":"55","text":"56"},[900,964],"[webcamRef, setCapturing, mediaRecorderRef]"]